import React, { Component } from 'react';

import axios from '../../axios-orders';
import Order from '../../components/Order/Order';
import withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';

class Orders extends Component {

  state={
    orders:[],
    loading: true
  }
  componentDidMount () {
    axios.get('/orders.json')
    .then( res =>{
      console.log(res.data);
      /* if we check the console.log we'll find that the data we get from
      firebase database is a javascript object where tthe heys are some
      unique IDs generated by firebase for us and the value then is the
      individual order data (customer, ingredients, price). So here we're
      getting back an object where we have the IDs as properties */
      let fetchedOrders= [];
      for (let key in res.data){
        fetchedOrders.push({
          ...res.data[key],
          id: key
        });
      }
      this.setState({loading: false, orders: fetchedOrders})
    })
    .catch(error =>{
      this.setState({loading: false})
    } )
  }

  render(){
    return(
      <div>
          {this.state.orders.map(order=> (
            <Order  ingredients={order.ingredients}
                    price={order.price}
                    key={order.id}/>
          ))}
      </div>
    )
  }
};

export default withErrorHandler(Orders, axios);
